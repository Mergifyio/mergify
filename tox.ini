[tox]
envlist = py37,pep8
skipsdist = true

[testenv]
setenv =
   MERGIFYENGINE_TEST_SETTINGS=fake.env
basepython = python3
usedevelop = true
extras = test
commands =
  pifpaf run -g MERGIFYENGINE_STORAGE_URL redis --port 6363 -- pifpaf run -g MERGIFYENGINE_CELERY_BROKER_URL redis --port 6364 -- pytest -v --pyargs mergify_engine {posargs}

[testenv:py37]
basepython = python3.7

[testenv:cover]
commands =
  pifpaf run -g MERGIFYENGINE_STORAGE_URL redis --port 6363 -- pifpaf run -g MERGIFYENGINE_CELERY_BROKER_URL redis --port 6364 -- pytest -v --pyargs mergify_engine --cov=mergify_engine --cov-config .coveragerc {posargs}

[testenv:record]
envdir={toxworkdir}/py37
setenv =
   MERGIFYENGINE_RECORD=1
   MERGIFYENGINE_TEST_SETTINGS=test.env
whitelist_externals =
    git
commands =
    {[testenv]commands}
    git add zfixtures/cassettes/

[testenv:test]
deps = uwsgi
setenv =
   MERGIFYENGINE_TEST_SETTINGS=test.env
whitelist_externals =
    bash
commands =
    pifpaf run redis -- bash run-tests.sh {posargs}

[testenv:venv]
deps = .
commands = bash -c "{posargs}"
whitelist_externals = bash

[testenv:pep8]
deps = flake8
       flake8-import-order
       flake8-blind-except
       flake8-builtins
       flake8-docstrings
       flake8-rst-docstrings
       flake8-logging-format
       pydocstyle<4  # flake8-docstrings not yet compatible with >=4
commands = flake8

[testenv:docs]
extras = docs
whitelist_externals =
  rm
  echo
commands =
  rm -rf doc/build
  sphinx-build -W -b html doc/source doc/build

[flake8]
exclude = .tox,.eggs,doc
show-source = true
ignore = D100,D101,D102,D103,D104,D105,D107,G200,G201,W504
application-import-names = mergify_engine
enable-extensions=G
