name: Continuous Integration
permissions: read-all

on:
  pull_request:
    branches:
      - main

jobs:
  requirements:
    timeout-minutes: 5
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9.5
      - run: |
          pip install tox
          tox -e requirements
          tox -e missing-imports
          tox -e genreqs
          git diff --exit-code

  heroku:
    timeout-minutes: 10
    runs-on: ubuntu-20.04
    services:
      redis:
        image: redis:latest
        ports:
          - 6363:6379
    steps:
      - uses: actions/checkout@v2
      - run: |
          echo '-e .' >> requirements.txt
          curl -sSL \
            "https://github.com/buildpacks/pack/releases/download/v0.18.1/pack-v0.18.1-linux.tgz" \
            | tar -xz pack
          ./pack build test_img --builder heroku/buildpacks:20 --buildpack heroku/python
          docker run \
            --env-file fake.env \
            -e MERGIFYENGINE_STORAGE_URL=redis://redis:6363 \
            --entrypoint /bin/bash \
            test_img \
            -c 'cd /app ; for i in .profile.d/*.sh; do source $i; done; mergify-import-check'


  pep8:
    timeout-minutes: 5
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9.5
      - run: |
          pip install tox
          tox -e pep8

  py39:
    timeout-minutes: 10
    runs-on: ubuntu-20.04
    services:
      redis:
        image: redis:latest
        ports:
          - 6363:6379
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9.5
      - run: |
          sudo apt install -y redis-server
          pip install tox
          tox -e py39

  docs:
    timeout-minutes: 5
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9.5
      - run: |
          sudo apt-get install graphviz
          pip install tox
          tox -e docs

  docker:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: docker/build-push-action@v2.4.0
